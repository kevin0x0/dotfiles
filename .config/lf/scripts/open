#!/usr/bin/bash

set -e
set -o pipefail

shopt -s extglob

IMAGES=()
MEDIA=()
TEXTS=()
DIRS=()
OTHERS=()

for f in "$@"; do
  if [ -L "$f" ]; then
    f=$(readlink "$f" 2>/dev/null)
    [ -e "$f" ] || continue
  fi
  case $(file --brief --mime-type "$f" 2>/dev/null) in
    image/*)
      IMAGES+=("$f")
      ;;
    @(audio|video)/*)
      MEDIA+=("$f")
      ;;
    @(application/@(json|yaml|toml)|text/*))
      TEXTS+=("$f")
      ;;
    inode/directory)
      DIRS+=("$f")
      ;;
    *)
      OTHERS+=("$f")
      ;;
  esac
done

if [ ${#DIRS[@]} -ne 0 ]; then
  if [ ${#IMAGES[@]} -ne 0 ]; then
    IMAGES+=("${DIRS[@]}")
  elif [ ${#TEXTS[@]} -ne 0 ]; then
    TEXTS+=("${DIRS[@]}")
  else
    OTHERS+=("${DIRS[@]}")
  fi
fi

if [ ${#IMAGES[@]} -ne 0 ]; then
  if type -P swayimg &>/dev/null; then
    flags=
    # Gallary mode for multiple images
    [ ${#IMAGES[@]} -gt 1 ] && flags="$flags -g"

    # Recursively scan for images if there is a directory
    for image in "${IMAGES[@]}"; do
      if [ -d "$image" ]; then
        flags="$flags -r"
        break
      fi
    done

    swayimg $flags "${IMAGES[@]}" </dev/null &>/dev/null &
  else
    setsid xdg-open "${IMAGES[@]}" </dev/null &>/dev/null
  fi
fi

if [ ${#MEDIA[@]} -ne 0 ]; then
  if type -P mpv &>/dev/null; then
    mpv "${MEDIA[@]}" </dev/null &>/dev/null &
  else
    setsid xdg-open "${MEDIA[@]}" </dev/null &>/dev/null
  fi
fi

if [ ${#OTHERS[@]} -ne 0 ]; then
  setsid xdg-open "${OTHERS[@]}" </dev/null &>/dev/null
fi

if [ ${#TEXTS[@]} -ne 0 ]; then
  ${EDITOR:-nvim} "${TEXTS[@]}" </dev/null 2>/dev/null
fi
