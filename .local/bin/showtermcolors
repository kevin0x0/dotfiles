#!/usr/bin/bash

set -e
set -o pipefail

COLUMN=6
BEGIN=0
END=256

error() {
  echo "$1" >&2
  exit 1
}

validate_number() {
  [[ "$1" =~ [0-9]+ ]] || error "Need a number, got $1"
}

opt_show_number=
number_format=%s
opt_dont_append_newline=
block_size=30
delimiter='
'
max_block=1
while [ $# -ne 0 ]; do
  case "$1" in
    -N|--show-number)
      opt_show_number=yes
      ;;
    -F|--number-format)
      [ $# -eq 1 ] && error "Option $1 needs a value."
      shift
      number_format=$1
      ;;
    -A|--no-newline)
      opt_dont_append_newline=yes
      ;;
    -S|--block-size)
      [ $# -eq 1 ] && error "Option $1 needs a value."
      shift
      validate_number "$1"
      block_size=$1
      ;;
    -C|--max-block)
      [ $# -eq 1 ] && error "Option $1 needs a value."
      shift
      validate_number "$1"
      max_block=$1
      ;;
    -D|--delimiter)
      [ $# -eq 1 ] && error "Option $1 needs a value."
      shift
      delimiter=$1
      ;;
    *)
      error "Unknown option"
      ;;
  esac
  shift
done

nblock=0
while read number; do
  case ${#number} in
    6)
      printf "\033[48;2;%u;%u;%um%${block_size}s\033[0m$number_format" \
        0x${number:0:2} 0x${number:2:2} 0x${number:4:2} "" \
        ${opt_show_number:+$number}
      ;;
    1|2|3)
      case $number in
        00?)
          number=${number#00}
          ;;
        0??)
          number=${number#0}
          ;;
      esac
      printf "\033[48;5;%um%${block_size}s\033[0m$number_format" $number "" \
        ${opt_show_number:+$number}
      ;;
    *)
      printf "%${block_size}s$number_format" "Unknown: " \
      ${opt_show_number:+$number}
      ;;
  esac
  nblock=$((nblock + 1))
  if [ $max_block -ne 0 -a $nblock -ge $max_block ]; then
    printf "%s" "$delimiter"
    nblock=0
  fi
done

if [ -n "$opt_dont_append_newline" ]; then
  exit
fi

if [ $nblock -ne 0 ]; then
  printf "%s" "$delimiter"
fi
