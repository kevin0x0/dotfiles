#!/usr/bin/dash

set -e

to_escaped_string() {
  sed 's/\\/\\\\/g; s/"/\\"/g; s/\t/\\t/g; s/\r/\\r/g; s/$/\\n/' | tr -d '\n'
}

do_curl() {
  local url=$1 api_key=$2 model=$3 prompt=$4 input=$5 stream=$6

  curl -Ns "$url" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $api_key" \
    -d '{
          "model": "'"$model"'",
          "messages": [
            {"role": "system", "content": "'"$prompt"'"},
            {"role": "user", "content": "'"$input"'"}
          ],
          "stream": '"$stream"',
          "temperature": 1.3
        }'

  # Output an empty line in the end to ensure the output always ends with newline.
  echo
}

URL=https://api.deepseek.com/chat/completions
DEEPSEEK_API_KEY=$(decget "$(xdg-user-dir DOCUMENTS)/api_keys.gpg" DEEPSEEK_API_KEY)
MODEL=deepseek-chat

PROMPT_TEMPLATE=\
'# Role
You are a Translation Assistant with language-detection and translation capabilities.

# Goal
- Detect the language(s) of the input text.
- Translate the content into LANGUAGE and output only the translated text.

# Context
The user’s input may include multiple languages and markup formats (e.g., Markdown, HTML, or other structured text).

# Requirements
1. **Semantic accuracy**—no omissions of information;
2. Maintain **the original style**, including sentence length, slang/formality, humor, or lyrical tone;
3. Preserve **the original structure** (paragraphs, line breaks, italics, punctuation, structured markup like markdown, html, etc);
4. **Do not "polish" or reinterpret content**—if cultural references require clarification, add brief notes in parentheses.
- Output **only the LANGUAGE translation**—no additional commentary or metadata.
- If the source language cannot be identified, output nothing (empty message).

# Workflow
1. **Language Detection**: Analyze the input to determine its language(s).
2. **Structure Analysis**: Determine whether the input is structured text.
3. **Translation**: Translate each segment, preserving the original structure.
4. **Output**: Produce only the LANGUAGE translation, with no source text, explanations, or language‑detection results.
'

input=
language=Chinese
opt_append_newline=yes
opt_stream=true
while [ $# -ne 0 ]; do
  case "$1" in
    -N|--no-newline)
      opt_append_newline=
      ;;
    -S|--no-stream)
      opt_stream=false
      ;;
    -L|--language)
      if [ $# -eq 1 ]; then
        echo "Option $1 needs a value" >&2
        exit 1
      fi

      shift
      language=$1
      ;;
    -*)
      echo "Unknown option: $1" >&2
      exit 1
      ;;
    *)
      input=$input${input:+ }$1
      ;;
  esac
  shift
done


prompt=$(printf "%s" "$PROMPT_TEMPLATE" | sed 's/LANGUAGE/'"$language"'/g' | to_escaped_string)

if [ -n "$input" ]; then
  input=$(to_escaped_string <<EOF
$input
EOF
)
else
  input=$(to_escaped_string)
fi

do_curl "$URL" "$DEEPSEEK_API_KEY" "$MODEL" "$prompt" "$input" "$opt_stream" \
  | stdbuf -o 0 sed -n '/"content"\s*:/s/^.*"content"\s*:\s*"\(\([^"\\]\|\\.\)*\)".*$/\1/p' \
  | stdbuf -o 0 sed 's/\\"/"/' | while IFS= read -r line; do
  printf "%b" "$line"
done

if [ -n "$opt_append_newline" ]; then
  echo
fi
