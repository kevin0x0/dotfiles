#!/usr/bin/dash

. "${XDG_CONFIG_HOME:-$HOME/.config}/i3blocks/scripts/colors"

: ${button:-0}
case "$button" in
  4)
    audioctl set pvolume 2%+ >/dev/null 2>&1
    ;;
  5)
    audioctl set pvolume 2%- >/dev/null 2>&1
    ;;
  2)
    audioctl set pswitch toggle >/dev/null 2>&1
    ;;
  1)
    verbose=1
    ;;
esac

status=
scontrol=
average_volume=
mute=off
nchannel=0

{
  IFS= read -r line
  scontrol=${line#Simple mixer control }
  if [ -z "$verbose" ]; then
    scontrol=${scontrol#*\'}
    scontrol=${scontrol%\'*}
  fi
  while IFS= read -r line; do
    case "$line" in
      *Playback*\[*\]*\[*\]*\[*\]*)
        nchannel=$((nchannel + 1))

        if [ -z "$verbose" ]; then
          data=$(printf "%s" "$line" | \
            sed -E 's/^.*\[(.*)\]\s*\[.*\]\s*\[(.*)\]$/\1 \2/')
        else
          data=$(printf "%s" "$line" | \
            sed -E 's/^\s*(.*):.*\[(.*)\]\s*\[.*\]\s*\[(.*)\]$/\1: \2 \3/')
          status=$status${status:+, }$data
          data=${data##*: }
        fi

        average_volume=$((average_volume + ${data%\%*}))
        case "$data" in
          *" on")
            mute=on
            ;;
        esac
        ;;
    esac
  done
} <<EOF
$(audioctl get pvolume)
EOF

average_volume=$((average_volume / nchannel))

if [ -z "$verbose" ]; then
  status="$average_volume% $mute"
fi

icon=
color=

if [ "$mute" = off ]; then
  color=$color_bad
  icon=ðŸ”‡
else
  color=$color_normal
  case "$average_volume" in
    [0-3]?|[0-9])
      icon=ðŸ”ˆ
      ;;
    [4-7]?)
      icon=ðŸ”‰
      ;;
    [8-9]?|100)
      icon=ðŸ”Š
      ;;
  esac
fi

printf "%s %s %s\n" "$icon" "$scontrol" "$status"
printf "%s %s\n" "$icon" "$status"
echo "$color"
