#!/usr/bin/dash

set -e

error() {
  echo "$1" >&2
  exit 1
}

opt_install_clash=
opt_config_clash=
opt_xdg_dirs=
opt_mail_dirs=
opt_encryption_method=
opt_gpg_recipient=

dotfiles() {
  cd "$HOME"
  git --git-dir="$HOME/dotfiles.git" --work-tree="$HOME" "$@"
}

check_diff() {
 if dotfiles diff --quiet --diff-filter=M; then
   return 0
 fi
 dotfiles diff --name-only --diff-filter=M | \
 while IFS= read -r line; do
   case "$line" in
     *.gpg)
       continue
       ;;
     *)
       return 1
       ;;
   esac
 done
}

list_diff() {
 dotfiles diff --name-only --diff-filter=M | \
 while IFS= read -r line; do
   case "$line" in
     *.gpg)
       continue
       ;;
     *)
       echo "$line"
       ;;
   esac
 done
}

while [ $# -ne 0 ]; do
  case "$1" in
    --install-clash|-i)
      opt_install_clash=1
      ;;
    --config-clash|-c)
      opt_config_clash=1
      ;;
    --xdg-dirs|-x)
      opt_xdg_dirs=1
      ;;
    --mail-dirs|-m)
      opt_mail_dirs=1
      ;;
    --encrypt|-e)
      opt_encryption_method=-r
      ;;
    --recipient|-r)
      [ $# -eq 1 ] && error "Option $1 needs a value"
      [ -n "$opt_gpg_recipient" ] && \
        error "You can specify only one recipient."
      shift
      opt_gpg_recipient=$1
      opt_encryption_method=-r
      ;;
    --hidden-recipient|-R)
      [ $# -eq 1 ] && error "Option $1 needs a value"
      [ -n "$opt_gpg_recipient" ] && \
        error "You can specify only one recipient."
      shift
      opt_gpg_recipient=$1
      opt_encryption_method=-R
      ;;
    --all|-a)
      opt_install_clash=1
      opt_config_clash=1
      opt_encryption_method=1
      ;;
    *)
      error "Unknown option: $1"
      ;;
  esac
  shift
done

# Checkout
if [ -n "$opt_checkout" ]; then
  if ! check_diff; then
    list_diff
    error "The contents of files listed above are different from those in the repository,"$'\n'\
      "can not safely checkout."
  fi
  dotfiles checkout -q
fi

[ -f "$XDG_CONFIG_HOME/user-dirs.dirs" ] && . "$XDG_CONFIG_HOME/user-dirs.dirs"

# Create XDG user directories
if [ -n "$opt_xdg_dirs" ]; then
  mkdir -p "$XDG_DESKTOP_DIR"
  mkdir -p "$XDG_MUSIC_DIR"
  mkdir -p "$XDG_TEMPLATES_DIR"
  mkdir -p "$XDG_PUBLICSHARE_DIR"
  mkdir -p "$XDG_DOCUMENTS_DIR"
  mkdir -p "$XDG_PICTURES_DIR"
  mkdir -p "$XDG_VIDEOS_DIR"
  mkdir -p "$XDG_DOWNLOAD_DIR"
fi

# Encrypt files using gpg
if [ -n "$opt_encryption_method" ]; then
  if [ -z "$opt_gpg_recipient" ]; then
    error "You should specify a recipient for encryption."
  fi
  find "$XDG_DOCUMENTS_DIR" -type f -name '*.gpg' \
    | sed 's/\.gpg$//' \
    | xargs -I {} gpg -qe --yes "$opt_encryption_method" "$opt_gpg_recipient" {}
fi

# Create mail directories
if [ -n "$opt_mail_dirs" ]; then
  DOC_DIR=${XDG_DOCUMENTS_DIR:-~/documents}
  for f in "$DOC_DIR"/accounts/*.gpg; do
    [ -f "$f" ] || continue
    mkdir -p "$(echo "$f" | sed 's/accounts\/\([^\/]\+\)\.gpg/mail\/\1/')"
  done

  if ! grep '^Path' "$XDG_CONFIG_HOME/isyncrc" | grep "$DOC_DIR"; then
    echo "Should manually update $XDG_CONFIG_HOME/isyncrc."
  fi
fi

# Install Clash
[ -n "$opt_install_clash" ] && clash-install

# Config Clash
[ -n "$opt_config_clash" ] && clash-config
