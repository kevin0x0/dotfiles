#!/usr/bin/dash

error() {
  echo "$1" >&2
  exit 1
}

opt_wallpaper=
opt_encryption_method=
opt_gpg_recipient=

dotfiles() {
  cd -- "$HOME"
  git --git-dir="$HOME/dotfiles.git" --work-tree="$HOME" "$@"
}

check_diff() {
 if dotfiles diff --quiet --diff-filter=M; then
   return 0
 fi
 dotfiles diff --name-only --diff-filter=M | \
 while IFS= read -r line; do
   case "$line" in
     *.gpg)
       continue
       ;;
     *)
       return 1
       ;;
   esac
 done
}

list_diff() {
 dotfiles diff --name-only --diff-filter=M | \
 while IFS= read -r line; do
   case "$line" in
     *.gpg)
       continue
       ;;
     *)
       printf "%s\n" "$line"
       ;;
   esac
 done
}

while [ $# -ne 0 ]; do
  case "$1" in
    --recipient|-r)
      [ $# -eq 1 ] && error "Option $1 needs a value"
      [ -n "$opt_gpg_recipient" ] && \
        error "You can specify only one recipient."
      shift
      opt_gpg_recipient=$1
      opt_encryption_method=-r
      ;;
    --wallpaper|-w)
      [ $# -eq 1 ] && error "Option $1 needs a value"
      shift
      opt_wallpaper=$1
      ;;
    --hidden-recipient|-R)
      [ $# -eq 1 ] && error "Option $1 needs a value"
      [ -n "$opt_gpg_recipient" ] && \
        error "You can specify only one recipient."
      shift
      opt_gpg_recipient=$1
      opt_encryption_method=-R
      ;;
    *)
      error "Unknown option: $1"
      ;;
  esac
  shift
done

# Checkout
if ! check_diff; then
  list_diff
  error "The contents of files listed above are different from those in the repository
can not safely checkout."
fi
dotfiles checkout -q

: ${XDG_CONFIG_HOME:=$HOME/.config}
: ${XDG_CACHE_HOME:=$HOME/.cache}

# Create XDG user directories
if ! [ -f "$XDG_CONFIG_HOME/user-dirs.dirs" ]; then
  error "$XDG_CONFIG_HOME/user-dirs.dirs does not exist"
fi
. "$XDG_CONFIG_HOME/user-dirs.dirs"
mkdir -p -- "$XDG_DESKTOP_DIR"
mkdir -p -- "$XDG_MUSIC_DIR"
mkdir -p -- "$XDG_TEMPLATES_DIR"
mkdir -p -- "$XDG_PUBLICSHARE_DIR"
mkdir -p -- "$XDG_DOCUMENTS_DIR"
mkdir -p -- "$XDG_PICTURES_DIR"
mkdir -p -- "$XDG_VIDEOS_DIR"
mkdir -p -- "$XDG_DOWNLOAD_DIR"

# Encrypt files using gpg
if [ -z "$opt_gpg_recipient" ]; then
  error "You should specify a recipient for encryption."
fi
find "$XDG_DOCUMENTS_DIR" -type f -name '*.gpg' \
  | sed 's/\.gpg$//' \
  | { 
    IFS= read -r file
    if ! [ -e "$file" ]; then
      printf "%s does not exist, skip" "$file"
    fi
    gpg -qe --yes "$opt_encryption_method" "$opt_gpg_recipient" "$file"
  }

# Create mail directories
for f in "$XDG_DOCUMENTS_DIR"/accounts/*.gpg; do
  [ -f "$f" ] || continue
  mkdir -p -- "$(printf "%s" "$f" | sed 's/accounts\/\([^\/]\+\)\.gpg/mail\/\1/')"
done
mkdir -p -- "$XDG_CACHE_HOME/neomutt/header/"
mkdir -p -- "$XDG_CACHE_HOME/neomutt/message/"

if ! grep '^Path' "$XDG_CONFIG_HOME/isyncrc" | grep "$XDG_DOCUMENTS_DIR" &&
   ! grep '^Path' "$XDG_CONFIG_HOME/isyncrc" | grep "~/${XDG_DOCUMENTS_DIR##~/}"
then
  echo "Should manually update $XDG_CONFIG_HOME/isyncrc."
fi

# Create wall paper directories for sway
mkdir -p -- "$XDG_PICTURES_DIR/wallpaper"
ln -srf -- "${opt_wallpaper:- }" "$XDG_PICTURES_DIR/wallpaper/current"

# Install Clash
proxy-install

# Config Clash
proxy-config

# Create repos
mkdir -p -- "$HOME/repos"

# Install fj
(cd -- "$HOME/repos/" && \
  git clone git@github.com:kevin0x0/fuckjson && \
  cd -- "$HOME/repos/fuckjson/" && \
  make && make install)
