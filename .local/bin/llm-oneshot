#!/usr/bin/dash

to_escaped_string() {
  sed 's/\\/\\\\/g; s/"/\\"/g; s/\t/\\t/g; s/\r/\\r/g; s/$/\\n/' | tr -d '\n'
}

do_curl() {
  curl -Ns "$url" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $api_key" \
    -d '{
          "model": "'"$model"'",
          "messages": [
            {"role": "system", "content": "'"$prompt"'"},
            {"role": "user", "content": "'"$input"'"}
          ],
          "stream": '"$stream"',
          "temperature": 1.3
        }'

  # Output an empty line in the end to ensure the output always ends with newline.
  echo
}

make_valid_json() {
  if [ "$stream" = "false" ]; then
    exec cat
  fi

  while IFS= read -r line; do
    if [ "$line" = "data: [DONE]" ]; then
      break
    fi
    printf "%s\n" "${line##data:}"
  done
}

URL=https://api.deepseek.com/chat/completions
MODEL=deepseek-chat
DEEPSEEK_API_KEY=$(decget "$(xdg-user-dir DOCUMENTS)/api_keys.gpg" DEEPSEEK_API_KEY)
if [ "$?" -ne 0 ]; then
  exit 1
fi

input=
opt_append_newline=yes
opt_stream=true
prompt=
while [ $# -ne 0 ]; do
  case "$1" in
    -N|--no-newline)
      opt_append_newline=
      ;;
    -S|--no-stream)
      opt_stream=false
      ;;
    -P|--prompt)
      if [ $# -eq 1 ]; then
        echo "Option $1 needs a value" >&2
        exit 1
      fi

      shift
      prompt=$(to_escaped_string <<EOF
$1
EOF
)
      ;;
    -*)
      echo "Unknown option: $1" >&2
      exit 1
      ;;
    *)
      input=$input${input:+ }$1
      ;;
  esac
  shift
done

if [ "${#prompt}" -eq 0 ]; then
  prompt=$(to_escaped_string <<EOF
You are a knowledgeable assistant, and your task is to answer the questions provided by the user.
EOF
)
fi

if [ -n "$input" ]; then
  input=$(to_escaped_string <<EOF
$input
EOF
)
else
  input=$(to_escaped_string)
fi

if [ "$opt_stream" = false ]; then
  selector='.choices[0].message.content'
else
  selector='.choices[0].delta.content'
fi

url=$URL api_key=$DEEPSEEK_API_KEY model=$MODEL prompt=$prompt input=$input stream=$opt_stream do_curl \
  | stream=$opt_stream make_valid_json \
  | stdbuf -o 0 fj -srd '' "$selector"

if [ -n "$opt_append_newline" ]; then
  echo
fi
