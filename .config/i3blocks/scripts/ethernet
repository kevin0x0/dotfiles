#!/usr/bin/dash

. "${XDG_CONFIG_HOME:-$HOME/.config}/i3blocks/scripts/colors"

: ${button:=-1}
if [ "$button" -eq 1 ]; then
  verbose=true
fi

if [ -n "$interface" ]; then
  # Try to use interface given by configuration.
  [-d "/sys/class/net/$interface" ] || exit 33
else
  first_interface=
  # Find the most likely Ethernet interface that I want.
  for dir in /sys/class/net/e[nt]*; do
    if [ -d "$dir/wireless" ]; then
      continue
    fi
    # Ok, it's not a wireless.

    curr_interface=${dir##*/}
    : ${first_interface:=$curr_interface}

    if [ $(cat "$dir/carrier") -ne 1 ]; then
      continue
    fi
    # This interface is lower up, so I probably want to use this interface.
    interface=$curr_interface
  done

  [ -z "$interface" ] && interface=$first_interface
  [ -z "$interface" ] && exit 0
fi

# Now en_sysdir is valid

data=$(ip -o link show "$interface")
data=${data#*<}
data=${data%>*},

icon=üåê

status=
speed=

status_h=DOWN
status_l=NO-CARRIER
while [ ${#data} -ne 0 ]; do
  flag=${data%%,*}
  data=${data#*,}
  case $flag in
    UP)
      status_h=$flag
      ;;
    DOWN)
      status_h=$flag
      ;;
    LOWER_UP)
      status_l=$flag
      ;;
    NO-CARRIER)
      status_l=$flag
      ;;
  esac
done

status=$status_h:$status_l

color=
case "$status" in
  UP:LOWER_UP)
    color=$color_good
    ;;
  UP:NO-CARRIER)
    color=$color_normal
    ;;
  DOWN:*)
    color=$color_normal
    ;;
esac

ip_address=
if [ -n "$verbose" -a "$status" = "UP:LOWER_UP" ]; then
  ip_address=$(ip -o -4 addr show "$interface" | awk '{print $4}')
  ip_address=${ip_address%%/??}

  speed=$(cat "$en_sysdir/speed")
  if [ "$speed" -lt 0 ]; then
    speed=0
  fi
fi

if [ -n "$verbose" ]; then
  printf "%s %s %s" "$icon" "$interface" "$status"
  [ -n "$ip_address" ] && printf " %s" "$ip_address"
  [ -n "$speed" ] && printf " %s" "$speed"
  echo
else
  printf "%s %s\n" "$icon" "$status"
fi

printf "%s %s\n" "$icon" "$status"

echo "$color"
